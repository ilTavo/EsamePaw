{"ast":null,"code":"export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش للصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'امش إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش  للصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'إذهب إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page} stránku`;\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\r\n  components: {\r\n    MuiBreadcrumbs: { defaultProps: {\r\n      expandText: 'Show path',\r\n    }},\r\n    MuiTablePagination: { defaultProps: {\r\n      getItemAriaLabel: (type) => {\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n      labelRowsPerPage: 'Rows per page:',\r\n      labelDisplayedRows: ({ from, to, count }) =>\r\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\r\n    }},\r\n    MuiRating: { defaultProps: {\r\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\r\n      emptyLabelText: 'Empty',\r\n    }},\r\n    MuiAutocomplete: { defaultProps: {\r\n      clearText: 'Clear',\r\n      closeText: 'Close',\r\n      loadingText: 'Loading…',\r\n      noOptionsText: 'No options',\r\n      openText: 'Open',\r\n    }},\r\n    MuiAlert: { defaultProps: {\r\n      closeText: 'Close',\r\n    }},\r\n    MuiPagination: {  defaultProps: {\r\n      'aria-label': 'Pagination navigation',\r\n      getItemAriaLabel: (type, page, selected) => {\r\n        if (type === 'page') {\r\n          return `${selected ? '' : 'Go to '}page ${page}`;\r\n        }\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n    }},\r\n  },\r\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n}; // Croatian - Hrvatski\n\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n\n            return `${page} — бетке өту`;\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n}; // Macedonian - Македонски\n\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n}; // Serbian - Srpski\n\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n\n            return `Перейти на ${page} страницу`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Valerio/Documents/GitHub/EsamePaw/ReactApp/node_modules/@mui/material/locale/index.js"],"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","arSD","azAZ","pluralForm","lastDigit","bnBD","bgBG","caES","csCZ","daDK","deDE","elGR","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","hrHR","lastTwoDigits","includes","huHU","hyAM","idID","isIS","itIT","jaJP","khKH","koKR","kzKZ","mkMK","nbNO","nlNL","plPL","ptBR","ptPT","roRO","srRS","ruRU","siLK","skSK","svSE","thTH","trTR","ukUA","viVN","zhCN","zhHK","zhTW"],"mappings":"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","sourcesContent":["export const amET = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'መንገድ አሳይ'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\r\n        },\r\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\r\n        emptyLabelText: 'ባዶ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'አጽዳ',\r\n        closeText: 'ዝጋ',\r\n        loadingText: 'በመጫን ላይ…',\r\n        noOptionsText: 'አማራጮች የሉም',\r\n        openText: 'ክፈት'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'ዝጋ'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'የገጽ አሰሳ',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const arEG = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'ظهر العنوان'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'امش للصفحة الأولى';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'امش للصفحة الأخيرة';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'امش للصفحة التالية';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'امش للصفحة السابقة';\r\n        },\r\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\r\n        emptyLabelText: 'فارغ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'مسح',\r\n        closeText: 'إغلاق',\r\n        loadingText: 'يتم التحميل…',\r\n        noOptionsText: 'لا يوجد خيارات',\r\n        openText: 'فتح'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'إغلاق'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'التنقل عبر الصفحات',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'امش إلى '} صفحة ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'امش للصفحة الأولى';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'امش للصفحة الأخيرة';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'امش للصفحة التالية';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'امش  للصفحة السابقة';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const arSD = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'إظهر العنوان'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'إذهب الى الصفحة الأولى';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'إذهب الي الصفحة الأخيرة';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'إذهب الى الصفحة التالية';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'إذهب الى الصفحة السابقة';\r\n        },\r\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\r\n        emptyLabelText: 'فارغ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'مسح',\r\n        closeText: 'إغلاق',\r\n        loadingText: 'يتم التحميل…',\r\n        noOptionsText: 'لا يوجد خيارات',\r\n        openText: 'فتح'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'إغلاق'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'التنقل عبر الصفحات',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'إذهب إلى '} صفحة ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'إذهب الى الصفحة الأولى';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'إذهب الي الصفحة الأخيرة';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'إذهب الى الصفحة التالية';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'إذهب الى الصفحة السابقة';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const azAZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Yolu göstər'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Birinci səhifəyə keç';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Sonuncu səhifəyə keç';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Növbəti səhifəyə keç';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Əvvəlki səhifəyə keç';\r\n        },\r\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Ulduz';\r\n          const lastDigit = value % 10;\r\n\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Ulduzlar';\r\n          }\r\n\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Boş'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Silmək',\r\n        closeText: 'Bağlamaq',\r\n        loadingText: 'Yüklənir…',\r\n        noOptionsText: 'Seçimlər mövcud deyil',\r\n        openText: 'Открыть'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Bağlamaq'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Səhifənin naviqasiyası',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Birinci səhifəyə keç';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Sonuncu səhifəyə keç';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Növbəti səhifəyə keç';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Əvvəlki səhifəyə keç';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const bnBD = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'পথ দেখান'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'প্রথম পৃষ্ঠায় যান';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'শেষ পৃষ্ঠায় যান';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'পরবর্তী পৃষ্ঠায় যান';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'আগের পৃষ্ঠায় যান';\r\n        },\r\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} স্টার`,\r\n        emptyLabelText: 'খালি'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'পরিষ্কার করুন',\r\n        closeText: 'বন্ধ করুন',\r\n        loadingText: 'লোড হচ্ছে…',\r\n        noOptionsText: 'কোন অপশন নেই',\r\n        openText: 'ওপেন করুন'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'বন্ধ করুন'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'পেজিনেশন নেভিগেশন',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'প্রথম পৃষ্ঠায় যান';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'শেষ পৃষ্ঠায় যান';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'পরবর্তী পৃষ্ঠায় যান';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'আগের পৃষ্ঠায় যান';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const bgBG = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показване на пътя'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Отиди на първата страница';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Отиди на последната страница';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Отиди на следващата страница';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Отиди на предишната страница';\r\n        },\r\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\r\n        emptyLabelText: 'Изчисти'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Изчисти',\r\n        closeText: 'Затвори',\r\n        loadingText: 'Зареждане…',\r\n        noOptionsText: 'Няма налични опции',\r\n        openText: 'Отвори'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Затвори'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Пагинация',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Към '}страница ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Отиди на първата страница';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Отиди на последната страница';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Отиди на следващата страница';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Отиди на предишната страница';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const caES = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //    expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\r\n        emptyLabelText: 'Buit'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Netejar',\r\n        closeText: 'Tancar',\r\n        loadingText: 'Carregant…',\r\n        noOptionsText: 'Sense opcions',\r\n        openText: 'Obert'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Tancat'\r\n      }\r\n    } // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n\r\n  }\r\n};\r\nexport const csCZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Ukázat cestu'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Jít na první stránku';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Jít na poslední stránku';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Jít na další stránku';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Jít na předchozí stránku';\r\n        },\r\n        labelRowsPerPage: 'Řádků na stránce:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          if (value === 1) {\r\n            return `${value} hvězdička`;\r\n          }\r\n\r\n          if (value >= 2 && value <= 4) {\r\n            return `${value} hvězdičky`;\r\n          }\r\n\r\n          return `${value} hvězdiček`;\r\n        },\r\n        emptyLabelText: 'Prázdné'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vymazat',\r\n        closeText: 'Zavřít',\r\n        loadingText: 'Načítání…',\r\n        noOptionsText: 'Žádné možnosti',\r\n        openText: 'Otevřít'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zavřít'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigace stránkováním',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Jít na '}${page} stránku`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Jít na první stránku';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Jít na poslední stránku';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Jít na další stránku';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Jít na předchozí stránku';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const daDK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Vis sti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå til den første side';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå til den sidste side';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå til den næste side';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå til den forrige side';\r\n        },\r\n        labelRowsPerPage: 'Rækker pr side:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Slet',\r\n        closeText: 'Luk',\r\n        loadingText: 'Indlæser…',\r\n        noOptionsText: 'Ingen muligheder',\r\n        openText: 'Åben'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Luk'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sideinddelings navigation',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Go to '}page ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Gå til den første side';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå til den sidste side';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå til den næste side';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå til den forrige side';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const deDE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pfad anzeigen'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Zur ersten Seite';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Zur letzten Seite';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Zur nächsten Seite';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Zur vorherigen Seite';\r\n        },\r\n        labelRowsPerPage: 'Zeilen pro Seite:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\r\n        emptyLabelText: 'Keine Wertung'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Leeren',\r\n        closeText: 'Schließen',\r\n        loadingText: 'Wird geladen…',\r\n        noOptionsText: 'Keine Optionen',\r\n        openText: 'Öffnen'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Schließen'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigation via Seitennummerierung',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Zur ersten Seite';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Zur letzten Seite';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Zur nächsten Seite';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Zur vorherigen Seite';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const elGR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Εμφάνιση διαδρομής'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Πρώτη σελίδα';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Τελευταία σελίδα';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Επόμενη σελίδα';\r\n          } // if (type === \"previous\") {\r\n\r\n\r\n          return 'Προηγούμενη σελίδα';\r\n        },\r\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\r\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Καθαρισμός',\r\n        closeText: 'Κλείσιμο',\r\n        loadingText: 'Φόρτωση…',\r\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\r\n        openText: 'Άνοιγμα'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Κλείσιμο'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Πλοήγηση σε σελίδες',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Πρώτη σελίδα';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Τελευταία σελίδα';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Επόμενη σελίδα';\r\n          } // if (type === \"previous\") {\r\n\r\n\r\n          return 'Προηγούμενη σελίδα';\r\n        }\r\n      }\r\n    }\r\n  }\r\n}; // default\r\n\r\nexport const enUS = {\r\n  /*\r\n  components: {\r\n    MuiBreadcrumbs: { defaultProps: {\r\n      expandText: 'Show path',\r\n    }},\r\n    MuiTablePagination: { defaultProps: {\r\n      getItemAriaLabel: (type) => {\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n      labelRowsPerPage: 'Rows per page:',\r\n      labelDisplayedRows: ({ from, to, count }) =>\r\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\r\n    }},\r\n    MuiRating: { defaultProps: {\r\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\r\n      emptyLabelText: 'Empty',\r\n    }},\r\n    MuiAutocomplete: { defaultProps: {\r\n      clearText: 'Clear',\r\n      closeText: 'Close',\r\n      loadingText: 'Loading…',\r\n      noOptionsText: 'No options',\r\n      openText: 'Open',\r\n    }},\r\n    MuiAlert: { defaultProps: {\r\n      closeText: 'Close',\r\n    }},\r\n    MuiPagination: {  defaultProps: {\r\n      'aria-label': 'Pagination navigation',\r\n      getItemAriaLabel: (type, page, selected) => {\r\n        if (type === 'page') {\r\n          return `${selected ? '' : 'Go to '}page ${page}`;\r\n        }\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n    }},\r\n  },\r\n  */\r\n};\r\nexport const esES = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar ruta'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ir a la primera página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ir a la última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ir a la página siguiente';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ir a la página anterior';\r\n        },\r\n        labelRowsPerPage: 'Filas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vacío'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpiar',\r\n        closeText: 'Cerrar',\r\n        loadingText: 'Cargando…',\r\n        noOptionsText: 'Sin opciones',\r\n        openText: 'Abierto'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Cerrar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Paginador',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Ir a la primera página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ir a la última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ir a la página siguiente';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ir a la página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const etEE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Näita teed'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Vali esimene lehekülg';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Vali viimane lehekülg';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Vali järgmine lehekülg';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Vali eelmine lehekülg';\r\n        },\r\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\r\n        emptyLabelText: 'Tühi'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tühjenda',\r\n        closeText: 'Sulge',\r\n        loadingText: 'Laen…',\r\n        noOptionsText: 'Valikuid ei ole',\r\n        openText: 'Ava'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sulge'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Lehekülgede valik',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Vali esimene lehekülg';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Vali viimane lehekülg';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Vali järgmine lehekülg';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Vali eelmine lehekülg';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const faIR = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'نمایش مسیر'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'رفتن به اولین صفحه';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'رفتن به آخرین صفحه';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'رفتن به صفحه‌ی بعدی';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'رفتن به صفحه‌ی قبلی';\r\n        },\r\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ستاره`,\r\n        emptyLabelText: 'خالی'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'پاک‌کردن',\r\n        closeText: 'بستن',\r\n        loadingText: 'در حال بارگذاری…',\r\n        noOptionsText: 'بی‌نتیجه',\r\n        openText: 'بازکردن'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'بستن'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ناوبری صفحه',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'رفتن به اولین صفحه';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'رفتن به آخرین صفحه';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'رفتن به صفحه‌ی بعدی';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'رفتن به صفحه‌ی قبلی';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const fiFI = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Näytä reitti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Mene ensimmäiselle sivulle';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Mene viimeiselle sivulle';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Mene seuraavalle sivulle';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Mene edelliselle sivulle';\r\n        },\r\n        labelRowsPerPage: 'Rivejä per sivu:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\r\n        emptyLabelText: 'Tyhjä'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tyhjennä',\r\n        closeText: 'Sulje',\r\n        loadingText: 'Ladataan…',\r\n        noOptionsText: 'Ei valintoja',\r\n        openText: 'Avaa'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sulje'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sivutus navigaatio',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Mene ensimmäiselle sivulle';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Mene viimeiselle sivulle';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Mene seuraavalle sivulle';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Mene edelliselle sivulle';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const frFR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Montrer le chemin'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Aller à la première page';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Aller à la dernière page';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Aller à la page suivante';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Aller à la page précédente';\r\n        },\r\n        labelRowsPerPage: 'Lignes par page :',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vide'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vider',\r\n        closeText: 'Fermer',\r\n        loadingText: 'Chargement…',\r\n        noOptionsText: 'Pas de résultats',\r\n        openText: 'Ouvrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fermer'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'navigation de pagination',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Aller à la première page';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Aller à la dernière page';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Aller à la page suivante';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Aller à la page précédente';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const heIL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'הצג נתיב'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'לעמוד הראשון';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'לעמוד האחרון';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'לעמוד הבא';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'לעמוד הקודם';\r\n        },\r\n        labelRowsPerPage: 'שורות בעמוד:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\r\n        emptyLabelText: 'ריק'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'נקה',\r\n        closeText: 'סגור',\r\n        loadingText: 'טוען…',\r\n        noOptionsText: 'אין אופציות',\r\n        openText: 'פתח'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'סגור'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ניווט בעמודים',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'לעמוד הראשון';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'לעמוד האחרון';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'לעמוד הבא';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'לעמוד הקודם';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const hiIN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'रास्ता दिखायें'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'पहले पृष्ठ पर जाएँ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'अंतिम पृष्ठ पर जाएँ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'अगले पृष्ठ पर जाएँ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'पिछले पृष्ठ पर जाएँ';\r\n        },\r\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\r\n        emptyLabelText: 'रिक्त'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'हटायें',\r\n        closeText: 'बंद करें',\r\n        loadingText: 'लोड हो रहा है…',\r\n        noOptionsText: 'कोई विकल्प नहीं',\r\n        openText: 'खोलें'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'बंद करें'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'पृस्ठानुसार संचालन',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'पहले पृष्ठ पर जाएँ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'अंतिम पृष्ठ पर जाएँ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'अगले पृष्ठ पर जाएँ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'पिछले पृष्ठ पर जाएँ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n}; // Croatian - Hrvatski\r\n\r\nexport const hrHR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaži putanju'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Idi na posljednju stranicu';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Idi na sljedeću stranicu';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Idi na prethodnu stranicu';\r\n        },\r\n        labelRowsPerPage: 'Redova po stranici:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          const lastTwoDigits = value % 100;\r\n\r\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\r\n            return 'Zvijezde';\r\n          }\r\n\r\n          return 'Zvijezda';\r\n        },\r\n        emptyLabelText: 'Prazno'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Briši',\r\n        closeText: 'Zatvori',\r\n        loadingText: 'Učitavanje…',\r\n        noOptionsText: 'Nema opcija',\r\n        openText: 'Otvori'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zatvori'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigacija po stranicama',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Idi na zadnju stranicu';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Idi na sljedeću stranicu';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Idi na prethodnu stranicu';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const huHU = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Útvonal'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Első oldalra';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Utolsó oldalra';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Következő oldalra';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Előző oldalra';\r\n        },\r\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Csillag`,\r\n        emptyLabelText: 'Üres'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Törlés',\r\n        closeText: 'Bezárás',\r\n        loadingText: 'Töltés…',\r\n        noOptionsText: 'Nincs találat',\r\n        openText: 'Megnyitás'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Bezárás'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Lapozás',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page}. oldal${selected ? '' : 'ra'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Első oldalra';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Utolsó oldalra';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Következő oldalra';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Előző oldalra';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const hyAM = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Աստղ`,\r\n        emptyLabelText: 'Դատարկ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Մաքրել',\r\n        closeText: 'Փակել',\r\n        loadingText: 'Բեռնում…',\r\n        noOptionsText: 'Տարբերակներ չկան',\r\n        openText: 'Բացել'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Փակել'\r\n      }\r\n    } // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n\r\n  }\r\n};\r\nexport const idID = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\r\n\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Hapus',\r\n        closeText: 'Tutup',\r\n        loadingText: 'Memuat…',\r\n        noOptionsText: 'Tidak ada opsi',\r\n        openText: 'Buka'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Tutup'\r\n      }\r\n    } // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n\r\n  }\r\n};\r\nexport const isIS = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //    expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\r\n        emptyLabelText: 'Tómt'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Hreinsa',\r\n        closeText: 'Loka',\r\n        loadingText: 'Hlaða…',\r\n        noOptionsText: 'Engar niðurstöður',\r\n        openText: 'Opna'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Loka'\r\n      }\r\n    } // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n\r\n  }\r\n};\r\nexport const itIT = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Visualizza percorso'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Vai alla prima pagina';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return \"Vai all'ultima pagina\";\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Vai alla pagina successiva';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Vai alla pagina precedente';\r\n        },\r\n        labelRowsPerPage: 'Righe per pagina:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\r\n        emptyLabelText: 'Vuoto'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Svuota',\r\n        closeText: 'Chiudi',\r\n        loadingText: 'Caricamento in corso…',\r\n        noOptionsText: 'Nessuna opzione',\r\n        openText: 'Apri'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Chiudi'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigazione impaginata',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Vai alla prima pagina';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return \"Vai all'ultima pagina\";\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Vai alla pagina successiva';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Vai alla pagina precedente';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const jaJP = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'すべて表示'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '最初のページへ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '最後のページへ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '次のページへ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return '前のページへ';\r\n        },\r\n        labelRowsPerPage: 'ページあたりの行数:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `星${value}`,\r\n        emptyLabelText: '星なし'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'クリア',\r\n        closeText: '閉じる',\r\n        loadingText: '読み込み中…',\r\n        noOptionsText: 'データがありません',\r\n        openText: '開く'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '閉じる'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ページ選択',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `ページ${page}${selected ? '' : 'へ'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return '最初のページへ';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '最後のページへ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '次のページへ';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return '前のページへ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const khKH = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'បង្ហាញផ្លូវ'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ទៅទំព័រដំបូង';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ទៅទំព័រចុងក្រោយ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ទៅទំព័របន្ទាប់';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ទៅទំព័រមុន';\r\n        },\r\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\r\n        emptyLabelText: 'ទទេ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'លុបចោល',\r\n        closeText: 'បិទ',\r\n        loadingText: 'កំពុងលោត…',\r\n        noOptionsText: 'គ្មានជម្រើស',\r\n        openText: 'បើក'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'បិទ'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'រុករកទំព័រ',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'ទៅទំព័រដំបូង';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ទៅទំព័រចុងក្រោយ';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ទៅទំព័របន្ទាប់';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ទៅទំព័រមុន';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const koKR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '경로 보기'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '첫 번째 페이지로 이동';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '마지막 페이지로 이동';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '다음 페이지로 이동';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return '이전 페이지로 이동';\r\n        },\r\n        labelRowsPerPage: '페이지 당 행:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 점`,\r\n        emptyLabelText: '빈 텍스트'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '지우기',\r\n        closeText: '닫기',\r\n        loadingText: '불러오는 중…',\r\n        noOptionsText: '옵션 없음',\r\n        openText: '열기'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '닫기'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': '페이지네이션 네비게이션',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return '첫 번째 페이지로 이동';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '마지막 페이지로 이동';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '다음 페이지로 이동';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return '이전 페이지로 이동';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const kzKZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Толық жолды көрсету'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Бірінші бетке өту';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Соңғы бетке өту';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Келесі бетке өту';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Алдыңғы бетке өту';\r\n        },\r\n        labelRowsPerPage: 'Беттегі қатарлар:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} жұлдыз`,\r\n        emptyLabelText: 'Рейтинг жоқ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Тазарту',\r\n        closeText: 'Жабу',\r\n        loadingText: 'Жүктелуде…',\r\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\r\n        openText: 'Ашу'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Жабу'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Беттерді шарлау',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            if (selected) {\r\n              return `${page} — бет`;\r\n            }\r\n\r\n            return `${page} — бетке өту`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Бірінші бетке өту';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Соңғы бетке өту';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Келесі бетке өту';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Алдыңғы бетке өту';\r\n        }\r\n      }\r\n    }\r\n  }\r\n}; // Macedonian - Македонски\r\n\r\nexport const mkMK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Прикажи патека'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Оди на прва страница';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Оди на последна страница';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Оди на следна страница';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Оди на предходна страница';\r\n        },\r\n        labelRowsPerPage: 'Редови по страница:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\r\n        },\r\n        emptyLabelText: 'Празно'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Избриши',\r\n        closeText: 'Затвори',\r\n        loadingText: 'Се презема',\r\n        noOptionsText: 'Нема опција',\r\n        openText: 'Отвори'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Затвори'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навигација низ страници',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Оди на прва страница';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Оди на последна страница';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Оди на следна страница';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Оди на предходна страница';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const nbNO = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Vis sti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå til forrige side';\r\n        },\r\n        labelRowsPerPage: 'Rader per side:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tøm',\r\n        closeText: 'Lukk',\r\n        loadingText: 'Laster inn…',\r\n        noOptionsText: 'Ingen alternativer',\r\n        openText: 'Åpne'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Lukk'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Paginering navigasjon',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gå til '}side ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå til forrige side';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const nlNL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pad tonen'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ga naar eerste pagina';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ga naar laatste pagina';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ga naar volgende pagina';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ga naar vorige pagina';\r\n        },\r\n        labelRowsPerPage: 'Regels per pagina:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\r\n        emptyLabelText: 'Leeg'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Wissen',\r\n        closeText: 'Sluiten',\r\n        loadingText: 'Laden…',\r\n        noOptionsText: 'Geen opties',\r\n        openText: 'Openen'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sluiten'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigatie via paginering',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Ga naar eerste pagina';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ga naar laatste pagina';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ga naar volgende pagina';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ga naar vorige pagina';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const plPL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaż ścieżkę'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Przejdź do pierwszej strony';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Przejdź do ostatniej strony';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Przejdź do następnej strony';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Przejdź do poprzedniej strony';\r\n        },\r\n        labelRowsPerPage: 'Wierszy na stronę:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'gwiazdek';\r\n          const lastDigit = value % 10;\r\n\r\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'gwiazdki';\r\n          } else if (value === 1) {\r\n            pluralForm = 'gwiazdka';\r\n          }\r\n\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Brak gwiazdek'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Wyczyść',\r\n        closeText: 'Zamknij',\r\n        loadingText: 'Ładowanie…',\r\n        noOptionsText: 'Brak opcji',\r\n        openText: 'Otwórz'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zamknij'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Nawigacja podziału na strony',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Przejdź do pierwszej strony';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Przejdź do ostatniej strony';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Przejdź do następnej strony';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Przejdź do poprzedniej strony';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ptBR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar caminho'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ir para a primeira página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ir para a última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ir para a próxima página';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ir para a página anterior';\r\n        },\r\n        labelRowsPerPage: 'Linhas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vazio'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpar',\r\n        closeText: 'Fechar',\r\n        loadingText: 'Carregando…',\r\n        noOptionsText: 'Sem opções',\r\n        openText: 'Abrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fechar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navegar pela paginação',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Ir para a primeira página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ir para a última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ir para a próxima página';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ir para a página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ptPT = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar caminho'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Primeira página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Próxima página';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Página anterior';\r\n        },\r\n        labelRowsPerPage: 'Linhas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vazio'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpar',\r\n        closeText: 'Fechar',\r\n        loadingText: 'A carregar…',\r\n        noOptionsText: 'Sem opções',\r\n        openText: 'Abrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fechar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navegar por páginas',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Primeira página';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Última página';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Próxima página';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const roRO = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Arată calea'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Mergi la prima pagină';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Mergi la ultima pagină';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Mergi la pagina următoare';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Mergi la pagina precedentă';\r\n        },\r\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\r\n        emptyLabelText: 'Gol'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Șterge',\r\n        closeText: 'Închide',\r\n        loadingText: 'Se încarcă…',\r\n        noOptionsText: 'Nicio opțiune',\r\n        openText: 'Deschide'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Închide'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigare prin paginare',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Mergi la prima pagină';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Mergi la ultima pagină';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Mergi la pagina următoare';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Mergi la pagina precedentă';\r\n        }\r\n      }\r\n    }\r\n  }\r\n}; // Serbian - Srpski\r\n\r\nexport const srRS = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaži putanju'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Idi na poslednju stranicu';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Idi na sledeću stranicu';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Idi na prethodnu stranicu';\r\n        },\r\n        labelRowsPerPage: 'Redova po stranici:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          const lastTwoDigits = value % 100;\r\n\r\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\r\n            return 'Zvezde';\r\n          }\r\n\r\n          return 'Zvezda';\r\n        },\r\n        emptyLabelText: 'Prazno'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Briši',\r\n        closeText: 'Zatvori',\r\n        loadingText: 'Učitavanje…',\r\n        noOptionsText: 'Nema opcija',\r\n        openText: 'Otvori'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zatvori'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigacija po stranicama',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Idi na zadnju stranicu';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Idi na sledeću stranicu';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Idi na prethodnu stranicu';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ruRU = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показать полный путь'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Перейти на первую страницу';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Перейти на последнюю страницу';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Перейти на следующую страницу';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Перейти на предыдущую страницу';\r\n        },\r\n        labelRowsPerPage: 'Строк на странице:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Звёзд';\r\n          const lastDigit = value % 10;\r\n\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Звезды';\r\n          } else if (lastDigit === 1) {\r\n            pluralForm = 'Звезда';\r\n          }\r\n\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Рейтинг отсутствует'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Очистить',\r\n        closeText: 'Закрыть',\r\n        loadingText: 'Загрузка…',\r\n        noOptionsText: 'Нет доступных вариантов',\r\n        openText: 'Открыть'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Закрыть'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навигация по страницам',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            if (selected) {\r\n              return `${page} страница`;\r\n            }\r\n\r\n            return `Перейти на ${page} страницу`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Перейти на первую страницу';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Перейти на последнюю страницу';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Перейти на следующую страницу';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Перейти на предыдущую страницу';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const siLK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'ගමන් මඟ පෙන්වන්න'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'පළමු පිටුවට යන්න';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'අවසාන පිටුවට යන්න';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'මීළඟ පිටුවට යන්න';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'පෙර පිටුවට යන්න';\r\n        },\r\n        labelRowsPerPage: 'පිටුවක පේළි:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `තරු ${value}`,\r\n        emptyLabelText: 'හිස්'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'මකන්න',\r\n        closeText: 'වසන්න',\r\n        loadingText: 'නැංවෙමින්…',\r\n        noOptionsText: 'විකල්ප නැත',\r\n        openText: 'විවෘත කරන්න'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'වසන්න'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'පිටු අතර සංචරණය',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'පළමු පිටුවට යන්න';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'අවසාන පිටුවට යන්න';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'මීළඟ පිටුවට යන්න';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'පෙර පිටුවට යන්න';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const skSK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Ukázať cestu '\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ísť na prvú stránku';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ísť na poslednú stránku';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ísť na ďaľšiu stránku';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ísť na predchádzajúcu stránku';\r\n        },\r\n        labelRowsPerPage: 'Riadkov na stránke:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          if (value === 1) {\r\n            return `${value} hviezdička`;\r\n          }\r\n\r\n          if (value >= 2 && value <= 4) {\r\n            return `${value} hviezdičky`;\r\n          }\r\n\r\n          return `${value} hviezdičiek`;\r\n        },\r\n        emptyLabelText: 'Prázdne'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vymazať',\r\n        closeText: 'Zavrieť',\r\n        loadingText: 'Načítanie…',\r\n        noOptionsText: 'Žiadne možnosti',\r\n        openText: 'Otvoriť'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zavrieť'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigácia stránkovanim',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Ísť na prvú stránku';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Ísť na poslednú stránku';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Ísť na ďaľšiu stránku';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Ísť na predchádzajúcu stránku';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const svSE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Visa sökväg'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå till första sidan';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå till sista sidan';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå till nästa sida';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå till föregående sida';\r\n        },\r\n        labelRowsPerPage: 'Rader per sida:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Rensa',\r\n        closeText: 'Stäng',\r\n        loadingText: 'Laddar…',\r\n        noOptionsText: 'Inga alternativ',\r\n        openText: 'Öppna'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Stäng'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sidnavigering',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Gå till första sidan';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Gå till sista sidan';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Gå till nästa sida';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Gå till föregående sida';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const thTH = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'แสดงเส้นทาง'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ไปที่หน้าแรก';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ไปที่หน้าสุดท้าย';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ไปที่หน้าถัดไป';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ไปที่หน้าก่อน';\r\n        },\r\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ดาว`,\r\n        emptyLabelText: 'ว่างเปล่า'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'เคลียร์',\r\n        closeText: 'ปิด',\r\n        loadingText: 'กำลังโหลด…',\r\n        noOptionsText: 'ไม่มีตัวเลือก',\r\n        openText: 'เปิด'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'ปิด'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': '',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'ไปที่หน้าแรก';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'ไปที่หน้าสุดท้าย';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'ไปที่หน้าถัดไป';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'ไปที่หน้าก่อน';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const trTR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Yolu göster'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'İlk sayfaya git';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Son sayfaya git';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Sonraki sayfaya git';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Önceki sayfaya git';\r\n        },\r\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\r\n\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Yıldız`,\r\n        emptyLabelText: 'Boş'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Temizle',\r\n        closeText: 'Kapat',\r\n        loadingText: 'Yükleniyor…',\r\n        noOptionsText: 'Seçenek yok',\r\n        openText: 'Aç'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Kapat'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sayfa navigasyonu',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'İlk sayfaya git';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Son sayfaya git';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Sonraki sayfaya git';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Önceki sayfaya git';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ukUA = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показати шлях сторінок'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Перейти на першу сторінку';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Перейти на останню сторінку';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Перейти на наступну сторінку';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Перейти на попередню сторінку';\r\n        },\r\n        labelRowsPerPage: 'Рядків на сторінці:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Зірок';\r\n          const lastDigit = value % 10;\r\n\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Зірки';\r\n          } else if (lastDigit === 1) {\r\n            pluralForm = 'Зірка';\r\n          }\r\n\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Рейтинг відсутній'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Очистити',\r\n        closeText: 'Згорнути',\r\n        loadingText: 'Завантаження…',\r\n        noOptionsText: 'Немає варіантів',\r\n        openText: 'Розгорнути'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Згорнути'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навігація сторінками',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Перейти на першу сторінку';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Перейти на останню сторінку';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Перейти на наступну сторінку';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Перейти на попередню сторінку';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const viVN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mở ra'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Tới trang đầu tiên';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Tới trang cuối cùng';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Tới trang tiếp theo';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Về trang trước đó';\r\n        },\r\n        labelRowsPerPage: 'Số hàng mỗi trang:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} sao`,\r\n        emptyLabelText: 'Không có dữ liệu'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Xóa',\r\n        closeText: 'Đóng',\r\n        loadingText: 'Đang tải…',\r\n        noOptionsText: 'Không có lựa chọn nào',\r\n        openText: 'Mở'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Đóng'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Thanh điều khiển trang',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Tới '}trang ${page}`;\r\n          }\r\n\r\n          if (type === 'first') {\r\n            return 'Tới trang đầu tiên';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return 'Tới trang cuối cùng';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return 'Tới trang tiếp theo';\r\n          } // if (type === 'previous') {\r\n\r\n\r\n          return 'Về trang trước đó';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhCN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展开'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一页';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '最后一页';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '下一页';\r\n          }\r\n\r\n          return '上一页';\r\n        },\r\n        labelRowsPerPage: '每页行数:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 颗星`,\r\n        emptyLabelText: '无标签'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清空',\r\n        closeText: '关闭',\r\n        loadingText: '加载中……',\r\n        noOptionsText: '没有可用选项',\r\n        openText: '打开'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '关闭'\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhHK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展開'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一頁';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '最後一頁';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '下一頁';\r\n          }\r\n\r\n          return '上一頁';\r\n        },\r\n        labelRowsPerPage: '每頁行數:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 粒星`,\r\n        emptyLabelText: '無標籤'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清除',\r\n        closeText: '關閉',\r\n        loadingText: '載入中……',\r\n        noOptionsText: '沒有可用選項',\r\n        openText: '開啟'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '關閉'\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhTW = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展開'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一頁';\r\n          }\r\n\r\n          if (type === 'last') {\r\n            return '最後一頁';\r\n          }\r\n\r\n          if (type === 'next') {\r\n            return '下一頁';\r\n          }\r\n\r\n          return '上一頁';\r\n        },\r\n        labelRowsPerPage: '每行行數:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 顆星`,\r\n        emptyLabelText: '無標簽'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清空',\r\n        closeText: '關閉',\r\n        loadingText: '載入中……',\r\n        noOptionsText: '没有可用選項',\r\n        openText: '打開'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '關閉'\r\n      }\r\n    }\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}