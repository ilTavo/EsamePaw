{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _KeyboardArrowLeft, _KeyboardArrowRight;\n\nconst _excluded = [\"className\", \"direction\", \"orientation\", \"disabled\"];\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, ownerState.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\n  }\n}));\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({\n    isRtl\n  }, props);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n      fontSize: \"small\"\n    })) : _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n      fontSize: \"small\"\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The direction the button should indicate.\r\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\r\n   * If `true`, the component is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * The component orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"sources":["C:/Users/Valerio/Documents/GitHub/EsamePaw/ReactApp/small-shopping-cart/node_modules/@mui/material/TabScrollButton/TabScrollButton.js"],"names":["_objectWithoutPropertiesLoose","_extends","_KeyboardArrowLeft","_KeyboardArrowRight","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useTheme","useThemeProps","styled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","isRtl","TabScrollButton","forwardRef","inProps","ref","className","direction","other","theme","component","role","tabIndex","children","fontSize","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","sx","oneOfType","arrayOf","func"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,IAAIC,kBAAJ,EAAwBC,mBAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,aAA3B,EAA0C,UAA1C,CAAlB;AAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,sBAAP,IAAiCC,8BAAjC,QAAuE,0BAAvE;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFH,UAJJ;AAKA,QAAMI,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASH,WAAT,EAAsBC,QAAQ,IAAI,UAAlC;AADM,GAAd;AAGA,SAAOf,cAAc,CAACgB,KAAD,EAAQR,8BAAR,EAAwCK,OAAxC,CAArB;AACD,CAVD;;AAYA,MAAMK,mBAAmB,GAAGZ,MAAM,CAACH,UAAD,EAAa;AAC7CgB,EAAAA,IAAI,EAAE,oBADuC;AAE7CC,EAAAA,IAAI,EAAE,MAFuC;AAG7CC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAM;AACJX,MAAAA;AADI,QAEFU,KAFJ;AAGA,WAAO,CAACC,MAAM,CAACN,IAAR,EAAcL,UAAU,CAACE,WAAX,IAA0BS,MAAM,CAACX,UAAU,CAACE,WAAZ,CAA9C,CAAP;AACD;AAR4C,CAAb,CAAN,CASzB,CAAC;AACFF,EAAAA;AADE,CAAD,KAEGpB,QAAQ,CAAC;AACbgC,EAAAA,KAAK,EAAE,EADM;AAEbC,EAAAA,UAAU,EAAE,CAFC;AAGbC,EAAAA,OAAO,EAAE,GAHI;AAIb,GAAE,KAAInB,sBAAsB,CAACQ,QAAS,EAAtC,GAA0C;AACxCW,IAAAA,OAAO,EAAE;AAD+B;AAJ7B,CAAD,EAOXd,UAAU,CAACE,WAAX,KAA2B,UAA3B,IAAyC;AAC1CU,EAAAA,KAAK,EAAE,MADmC;AAE1CG,EAAAA,MAAM,EAAE,EAFkC;AAG1C,WAAS;AACPC,IAAAA,SAAS,EAAG,UAAShB,UAAU,CAACiB,KAAX,GAAmB,CAAC,EAApB,GAAyB,EAAG;AAD1C;AAHiC,CAP9B,CAXc,CAA5B;AAyBA,MAAMC,eAAe,GAAG,aAAalC,KAAK,CAACmC,UAAN,CAAiB,SAASD,eAAT,CAAyBE,OAAzB,EAAkCC,GAAlC,EAAuC;AAC3F,QAAMX,KAAK,GAAGjB,aAAa,CAAC;AAC1BiB,IAAAA,KAAK,EAAEU,OADmB;AAE1Bb,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAKA,QAAM;AACJe,IAAAA,SADI;AAEJC,IAAAA;AAFI,MAGFb,KAHJ;AAAA,QAIMc,KAAK,GAAG7C,6BAA6B,CAAC+B,KAAD,EAAQ3B,SAAR,CAJ3C;;AAMA,QAAM0C,KAAK,GAAGjC,QAAQ,EAAtB;AACA,QAAMyB,KAAK,GAAGQ,KAAK,CAACF,SAAN,KAAoB,KAAlC;;AAEA,QAAMvB,UAAU,GAAGpB,QAAQ,CAAC;AAC1BqC,IAAAA;AAD0B,GAAD,EAExBP,KAFwB,CAA3B;;AAIA,QAAMT,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;AACA,SAAO,aAAaF,IAAI,CAACQ,mBAAD,EAAsB1B,QAAQ,CAAC;AACrD8C,IAAAA,SAAS,EAAE,KAD0C;AAErDJ,IAAAA,SAAS,EAAEpC,IAAI,CAACe,OAAO,CAACI,IAAT,EAAeiB,SAAf,CAFsC;AAGrDD,IAAAA,GAAG,EAAEA,GAHgD;AAIrDM,IAAAA,IAAI,EAAE,IAJ+C;AAKrD3B,IAAAA,UAAU,EAAEA,UALyC;AAMrD4B,IAAAA,QAAQ,EAAE;AAN2C,GAAD,EAOnDJ,KAPmD,EAO5C;AACRK,IAAAA,QAAQ,EAAEN,SAAS,KAAK,MAAd,GAAuB1C,kBAAkB,KAAKA,kBAAkB,GAAG,aAAaiB,IAAI,CAACT,iBAAD,EAAoB;AAChHyC,MAAAA,QAAQ,EAAE;AADsG,KAApB,CAA3C,CAAzC,GAEJhD,mBAAmB,KAAKA,mBAAmB,GAAG,aAAagB,IAAI,CAACR,kBAAD,EAAqB;AACxFwC,MAAAA,QAAQ,EAAE;AAD8E,KAArB,CAA5C;AAHjB,GAP4C,CAA9B,CAAxB;AAcD,CAlCoC,CAArC;AAmCAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,eAAe,CAACgB;AACxD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEL,EAAAA,QAAQ,EAAE5C,SAAS,CAACkD,IATpB;;AAWA;AACF;AACA;AACElC,EAAAA,OAAO,EAAEhB,SAAS,CAACmD,MAdnB;;AAgBA;AACF;AACA;AACEd,EAAAA,SAAS,EAAErC,SAAS,CAACoD,MAnBrB;;AAqBA;AACF;AACA;AACEd,EAAAA,SAAS,EAAEtC,SAAS,CAACqD,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,EAAmCC,UAxB9C;;AA0BA;AACF;AACA;AACEpC,EAAAA,QAAQ,EAAElB,SAAS,CAACuD,IA7BpB;;AA+BA;AACF;AACA;AACEtC,EAAAA,WAAW,EAAEjB,SAAS,CAACqD,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,EAA4CC,UAlCzD;;AAoCA;AACF;AACA;AACEE,EAAAA,EAAE,EAAExD,SAAS,CAACyD,SAAV,CAAoB,CAACzD,SAAS,CAAC0D,OAAV,CAAkB1D,SAAS,CAACyD,SAAV,CAAoB,CAACzD,SAAS,CAAC2D,IAAX,EAAiB3D,SAAS,CAACmD,MAA3B,EAAmCnD,SAAS,CAACuD,IAA7C,CAApB,CAAlB,CAAD,EAA6FvD,SAAS,CAAC2D,IAAvG,EAA6G3D,SAAS,CAACmD,MAAvH,CAApB;AAvCJ,CAFF,GA0CI,KAAK,CA1CT;AA2CA,eAAelB,eAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\n\r\nvar _KeyboardArrowLeft, _KeyboardArrowRight;\r\n\r\nconst _excluded = [\"className\", \"direction\", \"orientation\", \"disabled\"];\r\n\r\n/* eslint-disable jsx-a11y/aria-role */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\r\nimport ButtonBase from '../ButtonBase';\r\nimport useTheme from '../styles/useTheme';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport styled from '../styles/styled';\r\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    orientation,\r\n    disabled\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', orientation, disabled && 'disabled']\r\n  };\r\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\r\n};\r\n\r\nconst TabScrollButtonRoot = styled(ButtonBase, {\r\n  name: 'MuiTabScrollButton',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\r\n  }\r\n})(({\r\n  ownerState\r\n}) => _extends({\r\n  width: 40,\r\n  flexShrink: 0,\r\n  opacity: 0.8,\r\n  [`&.${tabScrollButtonClasses.disabled}`]: {\r\n    opacity: 0\r\n  }\r\n}, ownerState.orientation === 'vertical' && {\r\n  width: '100%',\r\n  height: 40,\r\n  '& svg': {\r\n    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\r\n  }\r\n}));\r\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTabScrollButton'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    direction\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const theme = useTheme();\r\n  const isRtl = theme.direction === 'rtl';\r\n\r\n  const ownerState = _extends({\r\n    isRtl\r\n  }, props);\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\r\n    component: \"div\",\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    role: null,\r\n    ownerState: ownerState,\r\n    tabIndex: null\r\n  }, other, {\r\n    children: direction === 'left' ? _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\r\n      fontSize: \"small\"\r\n    })) : _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {\r\n      fontSize: \"small\"\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The direction the button should indicate.\r\n   */\r\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\r\n\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The component orientation (layout flow direction).\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\r\n} : void 0;\r\nexport default TabScrollButton;"]},"metadata":{},"sourceType":"module"}