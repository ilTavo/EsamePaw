{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    type: type || 'text',\n    variant: \"standard\",\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","map":{"version":3,"sources":["C:/Users/Valerio/Documents/GitHub/EsamePaw/ReactApp/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useId","useId","MenuItem","useGridRootProps","getValueFromValueOptions","jsx","_jsx","renderSingleSelectOptions","valueOptions","valueFormatter","field","api","OptionComponent","iterableColumnValues","map","option","isOptionTypeObject","key","value","formattedValue","content","label","children","GridFilterInputSingleSelect","props","_item$value","_rootProps$components","_baseSelectProps$nati","_rootProps$components2","_rootProps$components3","item","applyValue","type","apiRef","focusElementRef","others","filterValueState","setFilterValueState","useState","id","rootProps","baseSelectProps","componentsProps","baseSelect","isSelectNative","native","currentColumn","columnField","current","getColumn","currentValueOptions","useMemo","onFilterChange","useCallback","event","target","String","useEffect","_itemValue","itemValue","undefined","components","BaseTextField","getLocaleText","placeholder","onChange","variant","InputLabelProps","shrink","inputRef","select","SelectProps","baseTextField","process","env","NODE_ENV","propTypes","any","isRequired","func","oneOfType","object","shape","string","number","operatorValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    type: type || 'text',\n    variant: \"standard\",\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.any.isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };"]},"metadata":{},"sourceType":"module"}