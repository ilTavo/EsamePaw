{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\n\nfunction GridFilterForm(props) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props;\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputProps, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputProps.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps)) : null\n    }))]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  applyFilterChanges: PropTypes.func.isRequired,\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  columnInputProps: PropTypes.any,\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  deleteFilter: PropTypes.func.isRequired,\n  deleteIconProps: PropTypes.any,\n  disableMultiFilterOperator: PropTypes.bool,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  linkOperatorInputProps: PropTypes.any,\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  operatorInputProps: PropTypes.any,\n  showMultiFilterOperators: PropTypes.bool,\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","map":{"version":3,"sources":["C:/Users/Valerio/Documents/GitHub/EsamePaw/ReactApp/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js"],"names":["_extends","React","PropTypes","unstable_composeClasses","composeClasses","IconButton","MenuItem","InputLabel","FormControl","capitalize","unstable_useId","useId","styled","clsx","gridFilterableColumnDefinitionsSelector","useGridSelector","GridLinkOperator","useGridApiContext","useGridRootProps","getDataGridUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","GridFilterFormRoot","name","slot","overridesResolver","props","styles","filterForm","theme","display","padding","spacing","FilterFormDeleteIcon","_","filterFormDeleteIcon","flexShrink","justifyContent","marginRight","marginBottom","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","minWidth","FilterFormColumnInput","filterFormColumnInput","width","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","linkOperator","And","Or","Error","getColumnLabel","col","headerName","field","collator","Intl","Collator","GridFilterForm","_rootProps$components","_rootProps$components2","_baseSelectProps$nati","_rootProps$components3","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","item","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","focusElementRef","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","apiRef","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","rootProps","valueRef","useRef","filterSelectorRef","hasLinkOperatorColumn","length","baseFormControlProps","componentsProps","baseFormControl","baseSelectProps","baseSelect","isBaseSelectNative","native","OptionComponent","sortedFilterableColumns","useMemo","sort","a","b","compare","currentColumn","columnField","current","getColumn","currentOperator","_currentColumn$filter","operatorValue","filterOperators","find","operator","value","changeColumn","useCallback","event","target","column","newOperator","eraseItemValue","InputComponent","undefined","changeOperator","changeLinkOperator","toString","handleDeleteFilter","disableMultipleColumnsFiltering","useImperativeHandle","focus","_valueRef$current","className","children","variant","as","components","BaseFormControl","getLocaleText","title","onClick","size","FilterPanelDeleteIcon","fontSize","sx","visibility","BaseSelect","inputProps","onChange","disabled","map","htmlFor","id","labelId","label","inputRef","applyValue","InputComponentProps","process","env","NODE_ENV","propTypes","func","isRequired","any","oneOf","bool","oneOfType","object","shape","string","number","arrayOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\n\nfunction GridFilterForm(props) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props;\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputProps, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputProps.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps)) : null\n    }))]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  applyFilterChanges: PropTypes.func.isRequired,\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  columnInputProps: PropTypes.any,\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  deleteFilter: PropTypes.func.isRequired,\n  deleteIconProps: PropTypes.any,\n  disableMultiFilterOperator: PropTypes.bool,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  linkOperatorInputProps: PropTypes.any,\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  operatorInputProps: PropTypes.any,\n  showMultiFilterOperators: PropTypes.bool,\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };"]},"metadata":{},"sourceType":"module"}